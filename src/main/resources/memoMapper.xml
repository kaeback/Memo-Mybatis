<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.MemoMapper">
    <!--  회원정보 등록  -->
    <insert id="saveMember">
        <selectKey keyProperty="member_id" resultType="long" order="BEFORE">
            select seq_memo.nextval from dual
        </selectKey>
        insert into member (
            member_id,
            email,
            password,
            name
        ) values (
            #{member_id},
            #{email},
            #{password},
            #{name}
        )
    </insert>

    <!--  이메일로 회원정보 검색  -->
    <select id="findMemberByEmail" resultType="member">
        select * from member where email = #{email}
    </select>

    <!--  이메일 및 패스워드로 회원정보 검색(로그인)  -->
    <select id="findMember" resultType="member">
        select * from member where email = #{email} and password = #{password}
    </select>

    <!--  쪽지 저장  -->
    <insert id="saveMemo">
        <selectKey keyProperty="memo_id" resultType="long" order="BEFORE">
            select seq_memo.nextval from dual
        </selectKey>
        insert into memo (
            memo_id,
            title,
            contents
        ) values (
            #{memo_id},
            #{title},
            #{contents}
        )
    </insert>

    <!--  보낸 쪽지 내역 저장  -->
    <insert id="saveSendMemoRecord">
        <selectKey keyProperty="send_id" resultType="long" order="BEFORE">
            select seq_memo.nextval from dual
        </selectKey>
        insert into send_memo_record (
            send_id,
            memo_id,
            sender_id,
            receiver_id
        ) values (
            #{send_id},
            #{memo_id},
            #{sender_id},
            #{receiver_id}
        )
    </insert>

    <!--  받은 쪽지 내역 저장  -->
    <insert id="saveReceiveMemoRecord">
        <selectKey keyProperty="receive_id" resultType="long" order="BEFORE">
            select seq_memo.nextval from dual
        </selectKey>
        insert into receive_memo_record (
            receive_id,
            memo_id,
            sender_id,
            receiver_id
        ) values (
            #{receive_id},
            #{memo_id},
            #{sender_id},
            #{receiver_id}
        )
    </insert>

    <!--  보낸 쪽지 전체목록  -->
    <select id="findSendMemos" resultType="map">
        select
            smr.send_id,
            smr.receiver_id,
            me.name as receiver_name,
            me.email as receiver_email,
            mo.title,
            smr.send_time
        from
        	send_memo_record smr
            join memo mo on (smr.memo_id = mo.memo_id)
            left join member me on (smr.receiver_id = me.member_id)
        where
            smr.sender_id = #{sender_id}
        order by
            smr.send_time desc
    </select>

    <!--  받은 쪽지 전체목록 -->
    <select id="findReceiveMemos" resultType="map">
        select
            rmr.receive_id,
            rmr.sender_id,
            me.name as sender_name,
            me.email as sender_email,
            mo.title,
            rmr.is_read
        from
        	receive_memo_record rmr
            join memo mo on (rmr.memo_id = mo.memo_id)
            left join member me on (rmr.sender_id = me.member_id)
        where
            rmr.receiver_id = #{receiver_id}
        order by
            rmr.is_read, rmr.receive_id desc
    </select>

    <!--  받은 쪽지 읽기  -->
    <select id="findReceiveMemoById" resultType="map">
        select
            rmr.receive_id,
            rmr.sender_id,
            me.name as sender_name,
            me.email as sender_email,
            mo.title,
            mo.contents,
            rmr.is_read
        from
        	receive_memo_record rmr
            join memo mo on (rmr.memo_id = mo.memo_id)
            left join member me on (rmr.sender_id = me.member_id)
        where
            rmr.receive_id = #{receive_id}
    </select>

    <!--  받은 쪽지 확인여부 수정  -->
    <update id="updateReceiveMemo">
        update receive_memo_record set
            is_read = 'Y'
        where
            receive_id = #{receive_id}
    </update>

</mapper>